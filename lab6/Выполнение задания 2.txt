1. Создадим каталоги students и mentors в домашней директории

- Перейдём в домашнюю директорию: 
cd ~
- Создадим директории students и mentors:
mkdir students
mkdir mentors

2. Создадим текстовые файлы students_list.txt и mentors_list.txt в соответствующих директориях

- Перейдём в директорию students и создадим файл students_list.txt:
cd students
touch students_list.txt
- Перейдём в директорию mentors и создадим файл mentors_list.txt:
cd ../mentors
touch mentors_list.txt

3. Заполним файлы

- Откроем файл students_list.txt в текстовом редакторе nano:
nano ~/students/students_list.txt
- Запишем список студентов (никаких команд не требуется)
- Сохраним изменения в редакторе nano (нажимаю Ctrl + O, затем Enter) и выйдем из редактора (Ctrl + X)
-Аналогично открывем файл mentors_list.txt и вводим список наставников:
nano ~/mentors/mentors_list.txt
- Сохраним и закроем файл

4. Переместим файл и удалим директорию

- Переместим файл mentors_list.txt в каталог students:
mv ~/mentors/mentors_list.txt ~/students/
- Поскольку в каталоге mentors больше нет файлов, удалим его с помощью команды rmdir:
rmdir ~/mentors

5. Переименуем директорию и удалим её вместе с содержимым

- Переименуем каталог students в students_and_mentors:
mv ~/students ~/students_and_mentors
- Удаляю каталог students_and_mentors вместе с его содержимым. Поскольку каталог теперь содержит файлы, использую команду rm с параметрами -rf, чтобы удалить его вместе с файлами. Параметр -r означает рекурсивное удаление (удаление всех файлов и подкаталогов), а -f — принудительное удаление без подтверждения:
rm -rf ~/students_and_mentors

6. Подключимся к машине с Linux по протоколу SSH

- Установим SSH сервер:
sudo apt install openssh-server -y
- Проверим статус SSH сервера:
sudo systemctl status ssh
- Сервер работает. Узнаем IP-адрес виртуальной машины. Введём команду для просмотра IP-адресов и найдём строку с inet, которая отображает IP-адрес, перед этим не забыв поставить в настройках виртуальной машины Сетевой мост (Bridged Adapter):
ip a
- 192.168.100.161. Теперь подключимся по SSH через PuTTY, используя наши данные пользователя.

7. Настроим авторизацию по SSH с использованием ключей

- Откроем PuTTYgen для генерации SSH ключей на хост-компьютере
- В окне PuTTY Key Generator:
1 Выберем RSA и размер ключа 2048 бит.
2 Нажмём на кнопку Generate.
3 Двигем мышкой в окне генератора, чтобы помочь завершить процесс создания ключа.
- После генерации ключа:
1 Сохраним private key (закрытый ключ) в файл, например, private_key.ppk.
2 Скопируем public key в буфер обмена.
- На виртуальной машине создадим директорию для ключей и добавим туда публичный ключ (я всё это делаю через PuTTY, т.к. там вставка текста нормально работает):
mkdir -p ~/.ssh
echo "публичный_ключ_скопированный_ранее== user@hostname" >> ~/.ssh/authorized_keys
chmod 600 ~/.ssh/authorized_keys
chmod 700 ~/.ssh
sudo systemctl restart ssh
- Настроим PuTTY для использования закрытого ключа:
1 Запустим PuTTY снова.
2 В поле Host Name (или IP address) введём IP-адрес виртуальной машины.
3 В меню слева найдём пункт Connection > SSH > Auth > Credentials.
4 Нажмём на Browse в поле "Private key file for authentication" и выберем файл private_key.ppk, который был сохранён ранее.
5 Вернёмся на главное окно и нажмём Open для подключения.
6 PuTTY подключился к виртуальной машине, используя ключ, и больше не запрашивает пароль.